cmake_minimum_required(VERSION 3.30)
project(DesignPattern VERSION 1.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)



add_subdirectory(googletest-1.15.2)

set(CreationPatterns ${CMAKE_CURRENT_SOURCE_DIR}/CreationalPatterns)
set(StructuralPatterns ${CMAKE_CURRENT_SOURCE_DIR}/StructuralPatterns)

set(TEST_SOURCES)
file(GLOB TEST_SOURCES ${CreationPatterns}/*.hpp ${StructuralPatterns}/*.hpp)

foreach(TEST_SOURCE ${TEST_SOURCES})
    # 获取测试源文件的文件名（不含路径和扩展名）
    get_filename_component(TEST_NAME ${TEST_SOURCE} NAME_WE)
    get_filename_component(TEST_PATH ${TEST_SOURCE} DIRECTORY)
    add_executable(${TEST_NAME} ${TEST_SOURCE} ${TEST_PATH}/TEST/${TEST_NAME}_unittest.cpp)
    target_link_libraries(${TEST_NAME} gtest_main)
    add_test(NAME ${TEST_NAME} COMMAND ${TEST_NAME})
endforeach()



# add_executable(Singleton ${CreationPatterns}/Singleton.hpp ${CreationPatterns}/Test/Singleton_unittest.cpp)
# target_link_libraries(Singleton gtest_main)

# add_executable(Builder ${CreationPatterns}/Builder.hpp ${CreationPatterns}/Test/Builder_unittest.cpp)
# target_link_libraries(Builder gtest_main)

# add_executable(Prototype ${CreationPatterns}/Prototype.hpp ${CreationPatterns}/Test/Prototype_unittest.cpp)
# target_link_libraries(Prototype gtest_main)



enable_testing()
# add_test(NAME Singleton COMMAND Singleton)
# add_test(NAME Builder COMMAND Builder)
# add_test(NAME Prototype COMMAND Prototype)
# include(GoogleTest)
# gtest_discover_tests(Singleton)